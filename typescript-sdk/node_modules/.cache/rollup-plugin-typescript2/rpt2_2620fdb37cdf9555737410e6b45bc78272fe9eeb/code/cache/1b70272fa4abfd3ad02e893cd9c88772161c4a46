{"code":"var Router = /** @class */ (function () {\r\n    function Router() {\r\n        var _this = this;\r\n        this.go = function () {\r\n            _this.route();\r\n        };\r\n        window.addEventListener('hashchange', this.route.bind(this));\r\n        this.defaultRoute = null;\r\n        this.routeTable = [];\r\n    }\r\n    Router.prototype.setDefaultPage = function (page, params) {\r\n        if (params === void 0) { params = null; }\r\n        this.defaultRoute = {\r\n            path: '',\r\n            page: page,\r\n            params: params,\r\n        };\r\n    };\r\n    Router.prototype.addRoutePath = function (path, page, params) {\r\n        if (params === void 0) { params = null; }\r\n        this.routeTable.push({ path: path, page: page, params: params });\r\n    };\r\n    Router.prototype.route = function () {\r\n        var routePath = location.hash;\r\n        if (routePath === '' && this.defaultRoute) {\r\n            this.defaultRoute.page.render();\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.routeTable; _i < _a.length; _i++) {\r\n            var routeInfo = _a[_i];\r\n            if (routePath.indexOf(routeInfo.path) >= 0) {\r\n                if (routeInfo.params) {\r\n                    var parseParams = routePath.match(routeInfo.params);\r\n                    if (parseParams) {\r\n                        routeInfo.page.render.apply(null, [parseParams[1]]);\r\n                    }\r\n                }\r\n                else {\r\n                    routeInfo.page.render();\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    return Router;\r\n}());\r\nexport default Router;\r\n","references":["/Users/mac/Desktop/Typescript/typescript-sdk/src/types/index.ts","/Users/mac/Desktop/Typescript/typescript-sdk/src/core/view.ts"],"dts":{"name":"/Users/mac/Desktop/Typescript/typescript-sdk/node_modules/.cache/rollup-plugin-typescript2/placeholder/core/router.d.ts","writeByteOrderMark":false,"text":"import { RouteInfo } from '../types';\r\nimport View from './view';\r\nexport default class Router {\r\n    defaultRoute: RouteInfo | null;\r\n    routeTable: RouteInfo[];\r\n    constructor();\r\n    go: () => void;\r\n    setDefaultPage(page: View, params?: RegExp | null): void;\r\n    addRoutePath(path: string, page: View, params?: RegExp | null): void;\r\n    private route;\r\n}\r\n"}}
