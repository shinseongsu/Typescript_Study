import { PaymentMethodType } from './connectpay/addPaymentMethod';
import { ConnectpayOptions, PaymentParams } from '@connectpay/types';
declare function ConnectPay(clientKey: string, customerKey: string, options?: ConnectpayOptions): {
    authenticate: () => Promise<void>;
    addPaymentMethod: (methodType?: PaymentMethodType) => Promise<import("./connectpay/addPaymentMethod").AddPaymentMethodResult>;
    requestPayment: (paymentParams: PaymentParams) => Promise<never>;
    openSettings: () => Promise<never>;
    setupPassword: () => Promise<void>;
    setupOneTouchPay: () => Promise<never>;
    getPaymentMethods: () => Promise<{
        cards: import("./connectpay/PaymentMethod").CardMethod[];
        accounts: import("./connectpay/PaymentMethod").AccountMethod[];
    }>;
    requestAgreement: (term: '빌링') => Promise<void>;
};
declare namespace ConnectPay {
    var __versionHash__: any;
}
export declare type ConnectPayConstructor = typeof ConnectPay;
declare global {
    interface Window {
        ConnectPay?: ConnectPayConstructor;
    }
}
export default ConnectPay;
