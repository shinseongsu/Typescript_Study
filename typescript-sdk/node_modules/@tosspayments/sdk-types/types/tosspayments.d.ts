import { CardPaymentRequest, VirtualAccountPaymentRequest, CommonPaymentRequest, PhonePaymentRequest } from './payment/PaymentRequest';
import BillingAuthRequest from './billing/BillingAuthRequest';
declare function TossPayments(clientKey: string): {
    readonly requestPayment: {
        (requestParams: CommonPaymentRequest): Promise<void>;
        (method: '카드', requestParams: CardPaymentRequest): Promise<void>;
        (method: '가상계좌', requestParams: VirtualAccountPaymentRequest): Promise<void>;
        (method: '휴대폰', requestParams: PhonePaymentRequest): Promise<void>;
    };
    readonly requestBillingAuth: (method: '카드', params: BillingAuthRequest) => Promise<void>;
};
declare namespace TossPayments {
    var __versionHash__: any;
}
export declare type TossPaymentsConstructor = typeof TossPayments;
export declare type TossPaymentsInstance = ReturnType<TossPaymentsConstructor>;
declare global {
    interface Window {
        TossPayments?: TossPaymentsConstructor;
    }
}
export default TossPayments;
